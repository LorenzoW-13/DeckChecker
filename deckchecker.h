//Header for Deck Checker
#ifndef DECKCHECKER_H
#define DECKCHECKER_H

//Qt autogenerated header
#include <ui_deckchecker.h>

//Qt Libraries
#include <QtWidgets/QMainWindow>
#include <QComboBox>
#include <QTableView>
#include <QtSql/QSqlDatabase>
#include <QtSql/QSqlQuery>
#include <QtSql/QSqlTableModel>
#include <QPushButton>

class DeckChecker : public QMainWindow {
    Q_OBJECT

    public:
        //Constructor and destructor
        DeckChecker(QWidget *parent = nullptr);
        ~DeckChecker();

    private:
        //Autogenerated ui object from Qt Creator
        Ui::MainWindow ui;

        //Left side widget components
        QComboBox* DeckNames; //List of recorded decks
        QPushButton* NewDeck; //Open dialog to record a new deck
        QTableView* Decklist; //Cards in the choosen deck (from DeckNames)
        QSqlTableModel* model_1; //SQL model for deck data
        QSqlQueryModel* model;
        QPushButton* sortAlph; //Sorts the decklist by card name
        QPushButton* sortType; //Sorts the decklist by card types

        //Right side widget components
        QComboBox* SearchBar; //Gets the card name to search in the database
        QTableView* CardsFound; //Cards with the given name
        QSqlTableModel* model_2; //SQL model for cards data

        //Grouping Widgets
        QWidget* DecksManager; //Block for the PushButtons on top left
        QWidget* SortingManager; //Block for the sorting PushButtons
        QWidget* LeftSide; //Left Block
        QWidget* RightSide; //Right Block

    private slots:
        //Shows selected deck's cards in decklist
        void showSelected() {};
        //Open the new deck dialog
        void loadDecks() {};
        //sort decklist alphabetically
        void sAlpha() {};
        //Sort decklist by type
        void sType() {};

        //Populates the cards list with the selected cards
        void searchCards() {};

        //Close the app if the databse fails
        void databaseClose();

    protected: 
        void resizeEvent(QResizeEvent* event) override;
        void showEvent(QShowEvent* event) override;
};

#endif //DeckCheckerWindow